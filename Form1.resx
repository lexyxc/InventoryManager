<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        oN12+w8nR0PFt0+MagAAAABJRU5ErkJggg==
</value>
  </data>
</root>