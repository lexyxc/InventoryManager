<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>